window.SIDEBAR_ITEMS = {"enum":[["UpdateState","Variants for valid Pool updates to send out as events"]],"macro":[["impl_mock_fees_state",""]],"mod":[["fees",""],["ops","Traits related to operations."],["rewards","Traits related to rewards."]],"struct":[["Always",""],["CurrencyPair","A trait that can be used to retrieve the current price for a currency"],["Never",""],["PriceValue",""]],"trait":[["CurrencyPrice",""],["InterestAccrual","A trait that can be used to calculate interest accrual for debt"],["Investment","A trait, when implemented allows to invest into investment classes"],["InvestmentAccountant","A trait whoâ€™s implementer provides means of accounting for investments of a generic kind."],["InvestmentProperties","A trait that allows to retrieve information about an investment class."],["OrderManager","A trait, when implemented must take care of collecting orders (invest & redeem) for a given investment class. When being asked it must return the current orders and when being singled about a fulfillment, it must act accordingly."],["Permissions",""],["PoolInspect","A trait that support pool inspection operations such as pool existence checks and pool admin of permission set."],["PoolMutate","A trait that supports modifications of pools"],["PoolNAV","A trait that can be used to fetch the nav and update nav for a given pool"],["PoolReserve","A trait that support pool reserve operations such as withdraw and deposit"],["PoolUpdateGuard",""],["PreConditions",""],["Properties",""],["Reward","A trait used for loosely coupling the claim pallet with a reward mechanism."],["TrancheCurrency","A trait for converting from a PoolId and a TranchId into a given Self::Currency"]]};